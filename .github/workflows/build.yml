name: build

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    # 关键：使用 macOS Runner，省去下载 toolchain/SDK 的麻烦
    runs-on: macos-13

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show Xcode SDK
        run: |
          xcrun --sdk iphoneos --show-sdk-path
          xcrun --sdk iphoneos --show-sdk-version
          /usr/bin/clang --version

      - name: Build dylib with Xcode clang
        run: |
          SDK_PATH=$(xcrun --sdk iphoneos --show-sdk-path)
          echo "Using SDK: $SDK_PATH"

          # 你的最小系统版本：iOS 12；如需改成 14.0：把 12.0 改 14.0 即可
          MIN_VER=12.0

          /usr/bin/clang \
            -dynamiclib -fobjc-arc \
            -arch arm64 \
            -isysroot "$SDK_PATH" \
            -miphoneos-version-min=${MIN_VER} \
            -framework Foundation \
            -framework UIKit \
            -framework AVFoundation \
            -o KnPatch.dylib KnPatch.m

          # 验证一下产物
          file KnPatch.dylib
          otool -L KnPatch.dylib || true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: KnPatch
          path: KnPatch.dylib
